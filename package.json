>>>>>>> 5fca665 (\chore(repo): declutter root, unify Python under py/, relocate scripts/docs, remove staging artifacts\)
  "name": "project-argus",
"type": "module",
"private": true,
"packageManager": "pnpm@9.0.0",
"scripts": {
<<<<<<< HEAD
    "postinstall": "pnpm -C apps/scraper-playwright exec playwright install chromium || true",
"clean": "pnpm -r --workspace-concurrency=1 run clean || true",
"build": "pnpm -r run build",
"lint": "pnpm -r run lint || true",
"test": "pnpm -r run test || true",
"typecheck": "pnpm -r run typecheck || true",
"argus:smoke": "pnpm -C apps/scraper-playwright build && pnpm -C apps/scraper-playwright smoke:tls",
"start:scraper": "pnpm -C apps/scraper-playwright start",
"dev:scraper": "pnpm -C apps/scraper-playwright dev",
"py:test": "pwsh -NoProfile -Command \"Set-Location py; if (Test-Path .venv) { $env:VIRTUAL_ENV=(Resolve-Path .venv); $env:PATH=Join-Path $env:VIRTUAL_ENV 'Scripts'; }; pytest -q\"",
"repo:inventory": "node tools/inventory.js"
},
"devDependencies": {
"typescript": "^5.5.0"
},
"dependencies": {
"glob": "^11.0.3"
    "clean": "pnpm -r --parallel run clean || true",
<<<<<<< HEAD
"typecheck": "pnpm -r run typecheck",
"lint": "pnpm -r run lint",
"build": "pnpm -r --workspace-concurrency=1 build",
"test": "pnpm -r run test",
"start:scraper": "pnpm -C apps/scraper-playwright start",
"dev:scraper": "pnpm -C apps/scraper-playwright dev",
"py:test": "pwsh -NoProfile -Command \"Set-Location py; if (Test-Path .venv) { $env:VIRTUAL_ENV=(Resolve-Path .venv); $env:PATH=Join-Path $env:VIRTUAL_ENV 'Scripts'; }; pytest -q\"",
"repo:inventory": "node tools/inventory.js",
"inventory": "node tools/inventory.js"
>>>>>>> 5fca665 (\chore(repo): declutter root, unify Python under py/, relocate scripts/docs, remove staging artifacts\)
}
    "typecheck": "pnpm -r run typecheck",
    "lint": "pnpm -r run lint",
    "build": "pnpm -r --workspace-concurrency=1 build",
    "test": "pnpm -r run test",
    "start:scraper": "pnpm -C apps/scraper-playwright start",
    "dev:scraper": "pnpm -C apps/scraper-playwright dev",
    "py:test": "node -e \"process.chdir('py');\" && pytest -q || exit 0",
    "py:lint": "node -e \"process.chdir('py');\" && ruff check . || exit 0",
    "repo:inventory": "node tools/inventory.js",
    "repo:doctor": "node tools/doctor.mjs",
    "inventory": "node tools/inventory.js"
  }
>>>>>>> 2c6bb0c (\chore(structure): move Python config to py/, harden jest/ts excludes, add repo doctor, tighten ignores\)
}
{
  "name": "project-argus",
  "type": "module",
  "private": true,
  "packageManager": "pnpm@9.0.0",
  "scripts": {
    "postinstall": "pnpm -C apps/scraper-playwright exec playwright install chromium || true",
    "clean": "pnpm -r --workspace-concurrency=1 run clean || true",
    "typecheck": "pnpm -r run typecheck",
    "lint": "pnpm -r run lint",
    "build": "pnpm -r --workspace-concurrency=1 build",
    "test": "pnpm -r run test",
    "argus:smoke": "pnpm -C apps/scraper-playwright build && pnpm -C apps/scraper-playwright smoke:tls",
    "start:scraper": "pnpm -C apps/scraper-playwright start",
    "dev:scraper": "pnpm -C apps/scraper-playwright dev",
    "py:test": "pwsh -NoProfile -Command \"Set-Location py; if (Test-Path .venv) { $env:VIRTUAL_ENV=(Resolve-Path .venv); $env:PATH=Join-Path $env:VIRTUAL_ENV 'Scripts'; }; pytest -q\"",
    "py:lint": "node -e \"process.chdir('py');\" && ruff check . || exit 0",
    "repo:inventory": "node tools/inventory.js",
    "repo:doctor": "node tools/doctor.mjs",
    "inventory": "node tools/inventory.js"
  },
  "devDependencies": {
    "typescript": "^5.5.0"
  },
  "dependencies": {
    "glob": "^11.0.3"
  }
}
=======
>>>>>>> 5fca665 (\chore(repo): declutter root, unify Python under py/, relocate scripts/docs, remove staging artifacts\)
  "name": "project-argus",
"type": "module",
"private": true,
"packageManager": "pnpm@9.0.0",
"scripts": {
<<<<<<< HEAD
    "postinstall": "pnpm -C apps/scraper-playwright exec playwright install chromium || true",
"clean": "pnpm -r --workspace-concurrency=1 run clean || true",
"build": "pnpm -r run build",
"lint": "pnpm -r run lint || true",
"test": "pnpm -r run test || true",
"typecheck": "pnpm -r run typecheck || true",
"argus:smoke": "pnpm -C apps/scraper-playwright build && pnpm -C apps/scraper-playwright smoke:tls",
"start:scraper": "pnpm -C apps/scraper-playwright start",
"dev:scraper": "pnpm -C apps/scraper-playwright dev",
"py:test": "pwsh -NoProfile -Command \"Set-Location py; if (Test-Path .venv) { $env:VIRTUAL_ENV=(Resolve-Path .venv); $env:PATH=Join-Path $env:VIRTUAL_ENV 'Scripts'; }; pytest -q\"",
"repo:inventory": "node tools/inventory.js"
},
"devDependencies": {
"typescript": "^5.5.0"
},
"dependencies": {
"glob": "^11.0.3"
=======
    "clean": "pnpm -r --parallel run clean || true",
<<<<<<< HEAD
"typecheck": "pnpm -r run typecheck",
"lint": "pnpm -r run lint",
"build": "pnpm -r --workspace-concurrency=1 build",
"test": "pnpm -r run test",
"start:scraper": "pnpm -C apps/scraper-playwright start",
"dev:scraper": "pnpm -C apps/scraper-playwright dev",
"py:test": "pwsh -NoProfile -Command \"Set-Location py; if (Test-Path .venv) { $env:VIRTUAL_ENV=(Resolve-Path .venv); $env:PATH=Join-Path $env:VIRTUAL_ENV 'Scripts'; }; pytest -q\"",
"repo:inventory": "node tools/inventory.js",
"inventory": "node tools/inventory.js"
>>>>>>> 5fca665 (\chore(repo): declutter root, unify Python under py/, relocate scripts/docs, remove staging artifacts\)
}
=======
    "typecheck": "pnpm -r run typecheck",
    "lint": "pnpm -r run lint",
    "build": "pnpm -r --workspace-concurrency=1 build",
    "test": "pnpm -r run test",
    "start:scraper": "pnpm -C apps/scraper-playwright start",
    "dev:scraper": "pnpm -C apps/scraper-playwright dev",
    "py:test": "node -e \"process.chdir('py');\" && pytest -q || exit 0",
    "py:lint": "node -e \"process.chdir('py');\" && ruff check . || exit 0",
    "repo:inventory": "node tools/inventory.js",
    "repo:doctor": "node tools/doctor.mjs",
    "inventory": "node tools/inventory.js"
  }
>>>>>>> 2c6bb0c (\chore(structure): move Python config to py/, harden jest/ts excludes, add repo doctor, tighten ignores\)
}